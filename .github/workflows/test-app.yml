# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]
  workflow_dispatch:
  

permissions:
  contents: 'read'
  pages: 'write'
  id-token: 'write'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        create_credentials_file: 'true'
        workload_identity_provider: 'projects/950302060703/locations/global/workloadIdentityPools/cholland-pool/providers/oidc-provider'
        service_account: 'githubacct@cholland-form.iam.gserviceaccount.com'
    - name: 'Install gcloud'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 390.0.0'
    - id: 'gcloud'
      name: 'gcloud'
      run: |
        gcloud info
    #- id: 'gcloud_auth'
    #  name: 'gcloud auth'
    #  run: |
    #    gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
    #    gcloud services list
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip        
        pip install poetry
    - name: Install Dependencies (Poetry)
      run: |
        poetry config http-basic.pypi-gcp oauth2accesstoken $(gcloud auth print-access-token)
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -v -s
